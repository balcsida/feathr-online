name: Python

on:
  push:
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist -m python/Cargo.toml
      - name: Install built wheel - x86_64
        run: |
          pip install feathrpiper --no-index --find-links dist --force-reinstall
          python -c "import feathrpiper"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          args: --release --universal2 --out dist -m python/Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install feathrpiper --no-index --find-links dist --force-reinstall
          python -c "import feathrpiper"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x64
          args: --release --out dist -m python/Cargo.toml
      - name: Install built wheel
        run: |
          pip install feathrpiper --no-index --find-links dist --force-reinstall
          python -c "import feathrpiper"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: x86_64
        manylinux: auto
        args: --release --out dist -m python/Cargo.toml
    - name: Install built wheel
      run: |
        pip install feathrpiper --no-index --find-links dist --force-reinstall
        python -c "import feathrpiper"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: aarch64
        manylinux: auto
        args: --release --out dist -m python/Cargo.toml
    - uses: uraimo/run-on-arch-action@v2.3.0
      name: Install built wheel
      with:
        arch: aarch64
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3 python3-pip
          pip3 install -U pip
        run: |
          pip3 install feathrpiper --no-index --find-links dist/ --force-reinstall
          python3 -c "import feathrpiper"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, linux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *