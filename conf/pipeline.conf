geoip_demo(ip as string)
| lookup country as string, city as string from ipgeolocation on ip
;

nyc_taxi_demo_1_lookup_online_store(pu_loc_id as int, do_loc_id as int, pu_time as string, do_time as string, trip_distance as double, fare_amount as double)
| lookup pu_loc_avg_fare = f_location_avg_fare, pu_loc_max_fare = f_location_max_fare from feathrci on to_string(pu_loc_id)
| lookup do_loc_avg_fare = f_location_avg_fare, do_loc_max_fare = f_location_max_fare from feathrci on to_string(do_loc_id)
;

nyc_taxi_demo_2_lookup_address(pu_loc_id as int, do_loc_id as int, pu_time as string, do_time as string, trip_distance as double, fare_amount as double)
| lookup pu_loc_name = name as string from locationsvc on to_string(pu_loc_id)
| lookup do_loc_name = name as string from locationsvc on to_string(do_loc_id)
;

nyc_taxi_demo_3_local_compute(pu_loc_id as int, do_loc_id as int, pu_time as string, do_time as string, trip_distance as double, fare_amount as double)
| project duration_second = (timestamp(do_time, "%Y/%-m/%-d %-H:%-M") - timestamp(pu_time, "%Y/%-m/%-d %-H:%-M"))
| project speed_mph = trip_distance * 3600 / duration_second
;

nyc_taxi_demo(pu_loc_id as int, do_loc_id as int, pu_time as string, do_time as string, trip_distance as double, fare_amount as double)
| lookup pu_loc_avg_fare = f_location_avg_fare, pu_loc_max_fare = f_location_max_fare from feathrci on to_string(pu_loc_id)
| lookup do_loc_avg_fare = f_location_avg_fare, do_loc_max_fare = f_location_max_fare from feathrci on to_string(do_loc_id)
| lookup pu_loc_name = name as string from locationsvc on to_string(pu_loc_id)
| lookup do_loc_name = name as string from locationsvc on to_string(do_loc_id)
| project duration_second = (timestamp(do_time, "%Y/%-m/%-d %-H:%-M") - timestamp(pu_time, "%Y/%-m/%-d %-H:%-M"))
| project speed_mph = trip_distance * 3600 / duration_second
;

inmobi_demo_1_bucket(fv as float)
| project bucketId = bucket(fv, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512)
;

inmobi_demo_2_concat(os as string, appBundle as string)
| project appBundleCrossOS = os + "_" + appBundle
;

inmobi_demo_3_split(osVersion as string)
| project majorOSVersion = to_string(split(osVersion, ".")[0])
;

inmobi_demo(fv as float, os as string, appBundle as string, osVersion as string)
| project bucketId = bucket(fv, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512), appBundleCrossOS = os + "_" + appBundle, majorOSVersion = to_string(split(osVersion, ".")[0])
| project-remove fv, os, appBundle, osVersion
;